/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TesteGIT;

import java.io.File;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.List;

import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.api.errors.NoHeadException;
import org.eclipse.jgit.diff.DiffEntry;
import org.eclipse.jgit.diff.DiffFormatter;
import org.eclipse.jgit.diff.RawTextComparator;
import org.eclipse.jgit.lib.ObjectId;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.revwalk.RevCommit;
import org.eclipse.jgit.revwalk.RevWalk;
import org.eclipse.jgit.storage.file.FileRepositoryBuilder;
import org.eclipse.jgit.util.io.DisabledOutputStream;

public class MainAPP {
    public static void main(String[] args) throws IOException, NoHeadException, GitAPIException {
    	Repository repository = FileRepositoryBuilder.create(
    		    new File("C:/Users/Tadeu-DELL/Documents/Workspaces/Estudos/SnkCommit/.git"));
		final Git git = new Git(repository);
//		 RevWalk walk = new RevWalk(repository);
//		 walk.markStart(walk.parseCommit(repository.resolve(Constants.HEAD)));
//		 walk.sort(RevSort.REVERSE); // chronological order
//		 final LocalDate thisYear = LocalDate.now();
//		 walk.setRevFilter(CommitTimeRevFilter.after(thisYear.toEpochDay()));
//		 for(RevCommit commit : walk) {
//			String msg = commit.getShortMessage();
//			if(msg.contains("GITLAB")) {
//				System.out.println(commit.getId().getName());
//			}
//		}
//		git.status().call().getModified().forEach(p->System.out.println(p));
		
		RevWalk rw = new RevWalk(repository);
		ObjectId head = repository.resolve("ac1bee938d72c68821b5de3ecb65c5fba5ac5088");
		RevCommit commit = rw.parseCommit(head);
		RevCommit parent = rw.parseCommit(commit.getParent(0).getId());
		DiffFormatter df = new DiffFormatter(DisabledOutputStream.INSTANCE);
		df.setRepository(repository);
		df.setDiffComparator(RawTextComparator.DEFAULT);
		df.setDetectRenames(true);
		List<DiffEntry> diffs = df.scan(parent.getTree(), commit.getTree());
		for (DiffEntry diff : diffs) {
		    System.out.println(MessageFormat.format("({0} {1} {2}", diff.getChangeType().name(), diff.getNewMode().getBits(), diff.getNewPath()));
		}
		rw.close();
		df.close();
		git.close();
	}
}
